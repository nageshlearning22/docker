docker swarm init
docker swarm --help
docker node ls
docker service create  -- name <> --type --replicas <> --constraint <node.labels.color==red>  <image>
docker secret create <secretname> tokenfilke
echo "abc" | docker secret create mysecret  -
docker secret inspect <secretname>
docker secret rm <secret name>
docker network create -d  overlay my-overlay
docker node update --label-add color=red <nodename/id>

docker service scale http=4
docker service update 
docker service create --name --replicas -p --update-delay 
docker rename <oldcont> <newcont>
docker export <cont> -o  <filename>
docker cp  <container>:<containerpath> <hostpath>

https://docs.docker.com/compose/gettingstarted/              ---------------> Flask
https://docs.docker.com/compose/gettingstarted/       ------> docker-compose up
https://karthi-net.medium.com/how-to-scale-services-using-docker-compose-31d7b83a6648 ------------> Scale
https://docs.docker.com/engine/reference/commandline/exec/   

docker exec -it <container_name> bash
docker exec -it <container> /bin/bash


[16:57, 07/06/2023] .: https://www.digitalocean.com/community/tutorials/how-to-build-and-deploy-a-flask-application-using-docker-on-ubuntu-20-04
[17:02, 07/06/2023] .: https://www.google.com/amp/s/www.freecodecamp.org/news/automate-docker-container-deployment-via-maven-53a855e26d3e/amp/






















nageshlearning22/recipe-app-api
k8
nageshlearning22/k8
jenkins
nageshlearning22/jenkins
gradle
nageshlearning22/gradle
mavenproject
nageshlearning22/mavenproject
mavenjenkins
nageshlearning22/mavenjenkins
mavenadvance
nageshlearning22/mavenadvance
django2
nageshlearning22/django2
django1
nageshlearning22/django1
django
nageshlearning22/django
simpledjango
nageshlearning22/simpledjango
wingsjune22
nageshlearning22/wingsjune22
ansible
nageshlearning22/ansible
docker
nageshlearning22/docker

































